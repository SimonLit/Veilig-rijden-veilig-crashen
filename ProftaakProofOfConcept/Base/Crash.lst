   1               		.file	"Crash.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	__floatunsisf
  11               	.global	__mulsf3
  12               		.section	.rodata.str1.1,"aMS",@progbits,1
  13               	.LC0:
  14 0000 4176 6572 		.string	"Average left speed: "
  14      6167 6520 
  14      6C65 6674 
  14      2073 7065 
  14      6564 3A20 
  15               	.LC1:
  16 0015 4176 6572 		.string	"Average right speed: "
  16      6167 6520 
  16      7269 6768 
  16      7420 7370 
  16      6565 643A 
  17               	.LC2:
  18 002b 4176 6572 		.string	"Average speed: "
  18      6167 6520 
  18      7370 6565 
  18      643A 2000 
  19               	.LC3:
  20 003b 4176 6572 		.string	"Average: "
  20      6167 653A 
  20      2000 
  21               	.global	__fixsfsi
  22               	.LC4:
  23 0045 2063 6D2F 		.string	" cm/s"
  23      7300 
  24               		.text
  25               	.global	assignCrashInfo
  27               	assignCrashInfo:
  28               	.LFB1:
  29               		.file 1 "Crash.c"
   1:Crash.c       **** #include "Crash.h"
   2:Crash.c       **** #include "Drive.h"
   3:Crash.c       **** #include "MPU9250.h"
   4:Crash.c       **** #include "RP6I2CmasterTWI.h"
   5:Crash.c       **** #include "RP6uart.h"
   6:Crash.c       **** #include "Led.h"
   7:Crash.c       **** #include "Motors.h"
   8:Crash.c       **** #include <stdbool.h>
   9:Crash.c       **** 
  10:Crash.c       **** //====================================================================================
  11:Crash.c       **** // Crash
  12:Crash.c       **** //====================================================================================
  13:Crash.c       **** 
  14:Crash.c       **** #define ARDUINO_DEVICE_ADDRESS (42)
  15:Crash.c       **** #define ARDUINO_WRITE_ADDRESS (ARDUINO_DEVICE_ADDRESS << 1)
  16:Crash.c       **** #define ARDUINO_READ_ADDRESS (ARDUINO_WRITE_ADDRESS + 1)
  17:Crash.c       **** 
  18:Crash.c       **** struct crashInfo crashInfoToSend;
  19:Crash.c       **** uint8_t pressed = false;
  20:Crash.c       **** uint8_t crashInfoWasSend = false;
  21:Crash.c       **** 
  22:Crash.c       **** uint8_t assignCrashInfo(gyroData gData)
  23:Crash.c       **** {
  30               		.loc 1 23 0
  31               		.cfi_startproc
  32 0000 8F92      		push r8
  33               	.LCFI0:
  34               		.cfi_def_cfa_offset 3
  35               		.cfi_offset 8, -2
  36 0002 9F92      		push r9
  37               	.LCFI1:
  38               		.cfi_def_cfa_offset 4
  39               		.cfi_offset 9, -3
  40 0004 AF92      		push r10
  41               	.LCFI2:
  42               		.cfi_def_cfa_offset 5
  43               		.cfi_offset 10, -4
  44 0006 BF92      		push r11
  45               	.LCFI3:
  46               		.cfi_def_cfa_offset 6
  47               		.cfi_offset 11, -5
  48 0008 CF92      		push r12
  49               	.LCFI4:
  50               		.cfi_def_cfa_offset 7
  51               		.cfi_offset 12, -6
  52 000a DF92      		push r13
  53               	.LCFI5:
  54               		.cfi_def_cfa_offset 8
  55               		.cfi_offset 13, -7
  56 000c EF92      		push r14
  57               	.LCFI6:
  58               		.cfi_def_cfa_offset 9
  59               		.cfi_offset 14, -8
  60 000e FF92      		push r15
  61               	.LCFI7:
  62               		.cfi_def_cfa_offset 10
  63               		.cfi_offset 15, -9
  64 0010 0F93      		push r16
  65               	.LCFI8:
  66               		.cfi_def_cfa_offset 11
  67               		.cfi_offset 16, -10
  68 0012 1F93      		push r17
  69               	.LCFI9:
  70               		.cfi_def_cfa_offset 12
  71               		.cfi_offset 17, -11
  72 0014 CF93      		push r28
  73               	.LCFI10:
  74               		.cfi_def_cfa_offset 13
  75               		.cfi_offset 28, -12
  76 0016 DF93      		push r29
  77               	.LCFI11:
  78               		.cfi_def_cfa_offset 14
  79               		.cfi_offset 29, -13
  80 0018 00D0      		rcall .
  81 001a 00D0      		rcall .
  82 001c 00D0      		rcall .
  83               	.LCFI12:
  84               		.cfi_def_cfa_offset 20
  85 001e CDB7      		in r28,__SP_L__
  86 0020 DEB7      		in r29,__SP_H__
  87               	.LCFI13:
  88               		.cfi_def_cfa_register 28
  89               	/* prologue: function */
  90               	/* frame size = 6 */
  91               	/* stack size = 18 */
  92               	.L__stack_usage = 18
  93 0022 4983      		std Y+1,r20
  94 0024 5A83      		std Y+2,r21
  95 0026 6B83      		std Y+3,r22
  96 0028 7C83      		std Y+4,r23
  97 002a 8D83      		std Y+5,r24
  98 002c 9E83      		std Y+6,r25
  24:Crash.c       **** 	uint16_t avergeLeftSpeed = calculateAverageLeftSpeed();
  99               		.loc 1 24 0
 100 002e 0E94 0000 		call calculateAverageLeftSpeed
 101               	.LVL0:
 102 0032 4C01      		movw r8,r24
 103               	.LVL1:
  25:Crash.c       **** 	uint16_t avergeRightSpeed = calculateAverageRightSpeed();
 104               		.loc 1 25 0
 105 0034 0E94 0000 		call calculateAverageRightSpeed
 106               	.LVL2:
 107 0038 5C01      		movw r10,r24
 108               	.LVL3:
  26:Crash.c       **** 	uint16_t averageSpeed = (avergeLeftSpeed + avergeRightSpeed)/2;
 109               		.loc 1 26 0
 110 003a 8C01      		movw r16,r24
 111 003c 080D      		add r16,r8
 112 003e 191D      		adc r17,r9
 113 0040 1695      		lsr r17
 114 0042 0795      		ror r16
 115               	.LVL4:
  27:Crash.c       **** 	double speedCMPerSecond = averageSpeed * 5 * 0.025; // By multiplying the speed by 5
 116               		.loc 1 27 0
 117 0044 85E0      		ldi r24,lo8(5)
 118 0046 809F      		mul r24,r16
 119 0048 B001      		movw r22,r0
 120 004a 819F      		mul r24,r17
 121 004c 700D      		add r23,r0
 122 004e 1124      		clr __zero_reg__
 123 0050 80E0      		ldi r24,0
 124 0052 90E0      		ldi r25,0
 125 0054 0E94 0000 		call __floatunsisf
 126               	.LVL5:
 127 0058 2DEC      		ldi r18,lo8(-51)
 128 005a 3CEC      		ldi r19,lo8(-52)
 129 005c 4CEC      		ldi r20,lo8(-52)
 130 005e 5CE3      		ldi r21,lo8(60)
 131 0060 0E94 0000 		call __mulsf3
 132               	.LVL6:
 133 0064 6B01      		movw r12,r22
 134 0066 7C01      		movw r14,r24
 135               	.LVL7:
  28:Crash.c       **** 													    // you get the amount of segments past
  29:Crash.c       **** 														// on the encoder per second. 
  30:Crash.c       **** 													    // Each segment is +/- 0.25mm. So by 
  31:Crash.c       **** 														// multiplying is by 0.025cm you get the 
  32:Crash.c       **** 														// amount of cm/s.
  33:Crash.c       **** 
  34:Crash.c       **** 	writeString("Average left speed: ");
 136               		.loc 1 34 0
 137 0068 80E0      		ldi r24,lo8(.LC0)
 138 006a 90E0      		ldi r25,hi8(.LC0)
 139 006c 0E94 0000 		call writeString
 140               	.LVL8:
  35:Crash.c       **** 	writeInteger(avergeLeftSpeed, DEC);
 141               		.loc 1 35 0
 142 0070 6AE0      		ldi r22,lo8(10)
 143 0072 C401      		movw r24,r8
 144 0074 0E94 0000 		call writeInteger
 145               	.LVL9:
  36:Crash.c       **** 	writeChar('\n');
 146               		.loc 1 36 0
 147 0078 8AE0      		ldi r24,lo8(10)
 148 007a 0E94 0000 		call writeChar
 149               	.LVL10:
  37:Crash.c       **** 	writeString("Average right speed: ");
 150               		.loc 1 37 0
 151 007e 80E0      		ldi r24,lo8(.LC1)
 152 0080 90E0      		ldi r25,hi8(.LC1)
 153 0082 0E94 0000 		call writeString
 154               	.LVL11:
  38:Crash.c       **** 	writeInteger(avergeRightSpeed, DEC);
 155               		.loc 1 38 0
 156 0086 6AE0      		ldi r22,lo8(10)
 157 0088 C501      		movw r24,r10
 158 008a 0E94 0000 		call writeInteger
 159               	.LVL12:
  39:Crash.c       **** 	writeChar('\n');
 160               		.loc 1 39 0
 161 008e 8AE0      		ldi r24,lo8(10)
 162 0090 0E94 0000 		call writeChar
 163               	.LVL13:
  40:Crash.c       **** 	writeString("Average speed: ");
 164               		.loc 1 40 0
 165 0094 80E0      		ldi r24,lo8(.LC2)
 166 0096 90E0      		ldi r25,hi8(.LC2)
 167 0098 0E94 0000 		call writeString
 168               	.LVL14:
  41:Crash.c       **** 	writeInteger(averageSpeed, DEC);
 169               		.loc 1 41 0
 170 009c 6AE0      		ldi r22,lo8(10)
 171 009e C801      		movw r24,r16
 172 00a0 0E94 0000 		call writeInteger
 173               	.LVL15:
  42:Crash.c       **** 	writeChar('\n');
 174               		.loc 1 42 0
 175 00a4 8AE0      		ldi r24,lo8(10)
 176 00a6 0E94 0000 		call writeChar
 177               	.LVL16:
  43:Crash.c       **** 	writeString("Average: ");
 178               		.loc 1 43 0
 179 00aa 80E0      		ldi r24,lo8(.LC3)
 180 00ac 90E0      		ldi r25,hi8(.LC3)
 181 00ae 0E94 0000 		call writeString
 182               	.LVL17:
  44:Crash.c       **** 	writeInteger(speedCMPerSecond, DEC);
 183               		.loc 1 44 0
 184 00b2 C701      		movw r24,r14
 185 00b4 B601      		movw r22,r12
 186 00b6 0E94 0000 		call __fixsfsi
 187               	.LVL18:
 188 00ba DC01      		movw r26,r24
 189 00bc CB01      		movw r24,r22
 190 00be 6AE0      		ldi r22,lo8(10)
 191 00c0 0E94 0000 		call writeInteger
 192               	.LVL19:
  45:Crash.c       **** 	writeString(" cm/s");
 193               		.loc 1 45 0
 194 00c4 80E0      		ldi r24,lo8(.LC4)
 195 00c6 90E0      		ldi r25,hi8(.LC4)
 196 00c8 0E94 0000 		call writeString
 197               	.LVL20:
  46:Crash.c       **** 	writeChar('\n');
 198               		.loc 1 46 0
 199 00cc 8AE0      		ldi r24,lo8(10)
 200 00ce 0E94 0000 		call writeChar
 201               	.LVL21:
  47:Crash.c       **** 	writeChar('\n');
 202               		.loc 1 47 0
 203 00d2 8AE0      		ldi r24,lo8(10)
 204 00d4 0E94 0000 		call writeChar
 205               	.LVL22:
  48:Crash.c       **** 
  49:Crash.c       **** 	crashInfoToSend.speed = speedCMPerSecond;
 206               		.loc 1 49 0
 207 00d8 C092 0000 		sts crashInfoToSend,r12
 208 00dc D092 0000 		sts crashInfoToSend+1,r13
 209 00e0 E092 0000 		sts crashInfoToSend+2,r14
 210 00e4 F092 0000 		sts crashInfoToSend+3,r15
  50:Crash.c       **** 	crashInfoToSend.GyX = gData.GyroX;
 211               		.loc 1 50 0
 212 00e8 8981      		ldd r24,Y+1
 213 00ea 9A81      		ldd r25,Y+2
 214 00ec 9093 0000 		sts crashInfoToSend+4+1,r25
 215 00f0 8093 0000 		sts crashInfoToSend+4,r24
  51:Crash.c       **** 	crashInfoToSend.GyY = gData.GyroY;
 216               		.loc 1 51 0
 217 00f4 8B81      		ldd r24,Y+3
 218 00f6 9C81      		ldd r25,Y+4
 219 00f8 9093 0000 		sts crashInfoToSend+6+1,r25
 220 00fc 8093 0000 		sts crashInfoToSend+6,r24
  52:Crash.c       **** 	crashInfoToSend.GyZ = gData.GyroZ;
 221               		.loc 1 52 0
 222 0100 8D81      		ldd r24,Y+5
 223 0102 9E81      		ldd r25,Y+6
 224 0104 9093 0000 		sts crashInfoToSend+8+1,r25
 225 0108 8093 0000 		sts crashInfoToSend+8,r24
  53:Crash.c       **** 	crashInfoToSend.sideHit = 1;
 226               		.loc 1 53 0
 227 010c 81E0      		ldi r24,lo8(1)
 228 010e 8093 0000 		sts crashInfoToSend+10,r24
  54:Crash.c       **** 	crashInfoToSend.impact = 1;
 229               		.loc 1 54 0
 230 0112 81E0      		ldi r24,lo8(1)
 231 0114 90E0      		ldi r25,0
 232 0116 9093 0000 		sts crashInfoToSend+11+1,r25
 233 011a 8093 0000 		sts crashInfoToSend+11,r24
  55:Crash.c       **** 
  56:Crash.c       **** 	return true;
  57:Crash.c       **** }
 234               		.loc 1 57 0
 235 011e 81E0      		ldi r24,lo8(1)
 236               	/* epilogue start */
 237 0120 2696      		adiw r28,6
 238 0122 0FB6      		in __tmp_reg__,__SREG__
 239 0124 F894      		cli
 240 0126 DEBF      		out __SP_H__,r29
 241 0128 0FBE      		out __SREG__,__tmp_reg__
 242 012a CDBF      		out __SP_L__,r28
 243 012c DF91      		pop r29
 244 012e CF91      		pop r28
 245 0130 1F91      		pop r17
 246 0132 0F91      		pop r16
 247               	.LVL23:
 248 0134 FF90      		pop r15
 249 0136 EF90      		pop r14
 250 0138 DF90      		pop r13
 251 013a CF90      		pop r12
 252               	.LVL24:
 253 013c BF90      		pop r11
 254 013e AF90      		pop r10
 255               	.LVL25:
 256 0140 9F90      		pop r9
 257 0142 8F90      		pop r8
 258               	.LVL26:
 259 0144 0895      		ret
 260               		.cfi_endproc
 261               	.LFE1:
 263               		.section	.rodata.str1.1
 264               	.LC5:
 265 004b 5345 4E44 		.string	"SENDING TO ARDUINO"
 265      494E 4720 
 265      544F 2041 
 265      5244 5549 
 265      4E4F 00
 266               	.global	__fixunssfsi
 267               		.text
 268               	.global	sendCrashInfo
 270               	sendCrashInfo:
 271               	.LFB2:
  58:Crash.c       **** 
  59:Crash.c       **** void sendCrashInfo(void)
  60:Crash.c       **** {
 272               		.loc 1 60 0
 273               		.cfi_startproc
 274               	/* prologue: function */
 275               	/* frame size = 0 */
 276               	/* stack size = 0 */
 277               	.L__stack_usage = 0
  61:Crash.c       **** 	writeString("SENDING TO ARDUINO");
 278               		.loc 1 61 0
 279 0146 80E0      		ldi r24,lo8(.LC5)
 280 0148 90E0      		ldi r25,hi8(.LC5)
 281 014a 0E94 0000 		call writeString
 282               	.LVL27:
  62:Crash.c       **** 	I2CTWI_transmit2Bytes(ARDUINO_WRITE_ADDRESS, 1, crashInfoToSend.speed); // In cm/s
 283               		.loc 1 62 0
 284 014e 6091 0000 		lds r22,crashInfoToSend
 285 0152 7091 0000 		lds r23,crashInfoToSend+1
 286 0156 8091 0000 		lds r24,crashInfoToSend+2
 287 015a 9091 0000 		lds r25,crashInfoToSend+3
 288 015e 0E94 0000 		call __fixunssfsi
 289               	.LVL28:
 290 0162 462F      		mov r20,r22
 291 0164 61E0      		ldi r22,lo8(1)
 292 0166 84E5      		ldi r24,lo8(84)
 293 0168 0E94 0000 		call I2CTWI_transmit2Bytes
 294               	.LVL29:
  63:Crash.c       **** 	I2CTWI_transmit2Bytes(ARDUINO_WRITE_ADDRESS, 2, crashInfoToSend.GyX);
 295               		.loc 1 63 0
 296 016c 4091 0000 		lds r20,crashInfoToSend+4
 297 0170 62E0      		ldi r22,lo8(2)
 298 0172 84E5      		ldi r24,lo8(84)
 299 0174 0E94 0000 		call I2CTWI_transmit2Bytes
 300               	.LVL30:
  64:Crash.c       **** 	I2CTWI_transmit2Bytes(ARDUINO_WRITE_ADDRESS, 3, crashInfoToSend.GyY);
 301               		.loc 1 64 0
 302 0178 4091 0000 		lds r20,crashInfoToSend+6
 303 017c 63E0      		ldi r22,lo8(3)
 304 017e 84E5      		ldi r24,lo8(84)
 305 0180 0E94 0000 		call I2CTWI_transmit2Bytes
 306               	.LVL31:
  65:Crash.c       **** 	I2CTWI_transmit2Bytes(ARDUINO_WRITE_ADDRESS, 4, crashInfoToSend.GyZ);
 307               		.loc 1 65 0
 308 0184 4091 0000 		lds r20,crashInfoToSend+8
 309 0188 64E0      		ldi r22,lo8(4)
 310 018a 84E5      		ldi r24,lo8(84)
 311 018c 0E94 0000 		call I2CTWI_transmit2Bytes
 312               	.LVL32:
  66:Crash.c       **** 	I2CTWI_transmit2Bytes(ARDUINO_WRITE_ADDRESS, 5, crashInfoToSend.sideHit); 	// 1: fromt
 313               		.loc 1 66 0
 314 0190 4091 0000 		lds r20,crashInfoToSend+10
 315 0194 65E0      		ldi r22,lo8(5)
 316 0196 84E5      		ldi r24,lo8(84)
 317 0198 0E94 0000 		call I2CTWI_transmit2Bytes
 318               	.LVL33:
  67:Crash.c       **** 																				// 2: right
  68:Crash.c       **** 																				// 3: left
  69:Crash.c       **** 																				// 4: back	
  70:Crash.c       **** 
  71:Crash.c       **** 	I2CTWI_transmit2Bytes(ARDUINO_WRITE_ADDRESS, 6, crashInfoToSend.impact);
 319               		.loc 1 71 0
 320 019c 4091 0000 		lds r20,crashInfoToSend+11
 321 01a0 66E0      		ldi r22,lo8(6)
 322 01a2 84E5      		ldi r24,lo8(84)
 323 01a4 0C94 0000 		jmp I2CTWI_transmit2Bytes
 324               	.LVL34:
 325               		.cfi_endproc
 326               	.LFE2:
 328               	.global	buttenChanged
 330               	buttenChanged:
 331               	.LFB3:
  72:Crash.c       **** }
  73:Crash.c       **** 
  74:Crash.c       **** void buttenChanged(void)
  75:Crash.c       **** {
 332               		.loc 1 75 0
 333               		.cfi_startproc
 334               	/* prologue: function */
 335               	/* frame size = 0 */
 336               	/* stack size = 0 */
 337               	.L__stack_usage = 0
  76:Crash.c       **** 	stop();
 338               		.loc 1 76 0
 339 01a8 0E94 0000 		call stop
 340               	.LVL35:
  77:Crash.c       **** 
  78:Crash.c       **** 	if(!pressed)
 341               		.loc 1 78 0
 342 01ac 8091 0000 		lds r24,pressed
 343 01b0 8111      		cpse r24,__zero_reg__
 344 01b2 00C0      		rjmp .L4
  79:Crash.c       **** 	{
  80:Crash.c       **** 		setLEDs(0b111111);
 345               		.loc 1 80 0
 346 01b4 8FE3      		ldi r24,lo8(63)
 347 01b6 0E94 0000 		call setLEDs
 348               	.LVL36:
  81:Crash.c       **** 		pressed = true;
 349               		.loc 1 81 0
 350 01ba 81E0      		ldi r24,lo8(1)
 351 01bc 8093 0000 		sts pressed,r24
  82:Crash.c       **** 
  83:Crash.c       **** 		writeSpeed();
 352               		.loc 1 83 0
 353 01c0 0E94 0000 		call writeSpeed
 354               	.LVL37:
  84:Crash.c       **** 		writeGyro();
 355               		.loc 1 84 0
 356 01c4 0C94 0000 		jmp writeGyro
 357               	.LVL38:
 358               	.L4:
  85:Crash.c       **** 	}
  86:Crash.c       **** 	else if(pressed)
  87:Crash.c       **** 	{
  88:Crash.c       **** 		pressed = false;
 359               		.loc 1 88 0
 360 01c8 1092 0000 		sts pressed,__zero_reg__
  89:Crash.c       **** 		crashInfoWasSend = false;
 361               		.loc 1 89 0
 362 01cc 1092 0000 		sts crashInfoWasSend,__zero_reg__
 363 01d0 0895      		ret
 364               		.cfi_endproc
 365               	.LFE3:
 367               	.global	crashInfoWasSend
 368               		.section .bss
 371               	crashInfoWasSend:
 372 0000 00        		.zero	1
 373               	.global	pressed
 376               	pressed:
 377 0001 00        		.zero	1
 378               		.comm	crashInfoToSend,13,1
 379               		.comm	motion_status,1,1
 380               		.comm	statusLEDs,1,1
 381               		.comm	sDataArray,30,1
 382               		.text
 383               	.Letext0:
 384               		.file 2 "/usr/lib/avr/include/stdint.h"
 385               		.file 3 "MPU9250.h"
 386               		.file 4 "Crash.h"
 387               		.file 5 "Drive.h"
 388               		.file 6 "../../../RP6Lib/RP6base/internal/LED_internal.h"
 389               		.file 7 "../../../RP6Lib/RP6base/internal/Motors_internal.h"
 390               		.file 8 "../../../RP6Lib/RP6common/RP6uart.h"
 391               		.file 9 "../../../RP6Lib/RP6common/RP6I2CmasterTWI.h"
 392               		.file 10 "../../../RP6Lib/RP6base/Led.h"
 393               		.file 11 "../../../RP6Lib/RP6base/Motors.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Crash.c
     /tmp/ccYqKdiT.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccYqKdiT.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccYqKdiT.s:4      *ABS*:0000003f __SREG__
     /tmp/ccYqKdiT.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccYqKdiT.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccYqKdiT.s:27     .text:00000000 assignCrashInfo
                            *COM*:0000000d crashInfoToSend
     /tmp/ccYqKdiT.s:270    .text:00000146 sendCrashInfo
     /tmp/ccYqKdiT.s:330    .text:000001a8 buttenChanged
     /tmp/ccYqKdiT.s:376    .bss:00000001 pressed
     /tmp/ccYqKdiT.s:371    .bss:00000000 crashInfoWasSend
                            *COM*:00000001 motion_status
                            *COM*:00000001 statusLEDs
                            *COM*:0000001e sDataArray

UNDEFINED SYMBOLS
__floatunsisf
__mulsf3
__fixsfsi
calculateAverageLeftSpeed
calculateAverageRightSpeed
writeString
writeInteger
writeChar
__fixunssfsi
I2CTWI_transmit2Bytes
stop
setLEDs
writeSpeed
writeGyro
__do_copy_data
__do_clear_bss
