   1               		.file	"Crash.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	__floatunsisf
  11               	.global	__mulsf3
  12               		.section	.rodata.str1.1,"aMS",@progbits,1
  13               	.LC0:
  14 0000 4176 6572 		.string	"Average left speed: "
  14      6167 6520 
  14      6C65 6674 
  14      2073 7065 
  14      6564 3A20 
  15               	.LC1:
  16 0015 4176 6572 		.string	"Average right speed: "
  16      6167 6520 
  16      7269 6768 
  16      7420 7370 
  16      6565 643A 
  17               	.LC2:
  18 002b 4176 6572 		.string	"Average speed: "
  18      6167 6520 
  18      7370 6565 
  18      643A 2000 
  19               	.LC3:
  20 003b 4176 6572 		.string	"Average: "
  20      6167 653A 
  20      2000 
  21               	.global	__fixsfsi
  22               	.LC4:
  23 0045 2063 6D2F 		.string	" cm/s"
  23      7300 
  24               	.LC5:
  25 004b 4779 583A 		.string	"GyX: "
  25      2000 
  26               	.LC6:
  27 0051 4779 593A 		.string	"GyY: "
  27      2000 
  28               	.LC7:
  29 0057 4779 5A3A 		.string	"GyZ: "
  29      2000 
  30               		.text
  31               	.global	assignCrashInfo
  33               	assignCrashInfo:
  34               	.LFB7:
  35               		.file 1 "Crash.c"
   1:Crash.c       **** #include "Crash.h"
   2:Crash.c       **** #include "Drive.h"
   3:Crash.c       **** #include "MPU9250.h"
   4:Crash.c       **** #include "RP6I2CmasterTWI.h"
   5:Crash.c       **** #include "RP6uart.h"
   6:Crash.c       **** #include <stdbool.h>
   7:Crash.c       **** #include "RP6Control_I2CMasterLib.h" 
   8:Crash.c       **** 
   9:Crash.c       **** #define SERIAL_DEBUG	
  10:Crash.c       **** 
  11:Crash.c       **** //====================================================================================
  12:Crash.c       **** // Crash
  13:Crash.c       **** //====================================================================================
  14:Crash.c       **** 
  15:Crash.c       **** #define ARDUINO_DEVICE_ADDRESS (42)
  16:Crash.c       **** #define ARDUINO_WRITE_ADDRESS (ARDUINO_DEVICE_ADDRESS << 1)
  17:Crash.c       **** #define ARDUINO_READ_ADDRESS (ARDUINO_WRITE_ADDRESS + 1)
  18:Crash.c       **** 
  19:Crash.c       **** struct crashInfo crashInfoToSend;
  20:Crash.c       **** uint8_t pressed = false;
  21:Crash.c       **** uint8_t crashInfoWasSend = false;
  22:Crash.c       **** uint8_t hitSide;
  23:Crash.c       **** 
  24:Crash.c       **** int assignCrashInfo(void)
  25:Crash.c       **** {
  36               		.loc 1 25 0
  37               		.cfi_startproc
  38 0000 AF92      		push r10
  39               	.LCFI0:
  40               		.cfi_def_cfa_offset 3
  41               		.cfi_offset 10, -2
  42 0002 BF92      		push r11
  43               	.LCFI1:
  44               		.cfi_def_cfa_offset 4
  45               		.cfi_offset 11, -3
  46 0004 CF92      		push r12
  47               	.LCFI2:
  48               		.cfi_def_cfa_offset 5
  49               		.cfi_offset 12, -4
  50 0006 DF92      		push r13
  51               	.LCFI3:
  52               		.cfi_def_cfa_offset 6
  53               		.cfi_offset 13, -5
  54 0008 EF92      		push r14
  55               	.LCFI4:
  56               		.cfi_def_cfa_offset 7
  57               		.cfi_offset 14, -6
  58 000a FF92      		push r15
  59               	.LCFI5:
  60               		.cfi_def_cfa_offset 8
  61               		.cfi_offset 15, -7
  62 000c 0F93      		push r16
  63               	.LCFI6:
  64               		.cfi_def_cfa_offset 9
  65               		.cfi_offset 16, -8
  66 000e 1F93      		push r17
  67               	.LCFI7:
  68               		.cfi_def_cfa_offset 10
  69               		.cfi_offset 17, -9
  70 0010 CF93      		push r28
  71               	.LCFI8:
  72               		.cfi_def_cfa_offset 11
  73               		.cfi_offset 28, -10
  74 0012 DF93      		push r29
  75               	.LCFI9:
  76               		.cfi_def_cfa_offset 12
  77               		.cfi_offset 29, -11
  78               	/* prologue: function */
  79               	/* frame size = 0 */
  80               	/* stack size = 10 */
  81               	.L__stack_usage = 10
  26:Crash.c       **** 	uint16_t avergeLeftSpeed = calculateAverageLeftSpeed();
  82               		.loc 1 26 0
  83 0014 0E94 0000 		call calculateAverageLeftSpeed
  84               	.LVL0:
  85 0018 8C01      		movw r16,r24
  86               	.LVL1:
  27:Crash.c       **** 	uint16_t avergeRightSpeed = calculateAverageRightSpeed();
  87               		.loc 1 27 0
  88 001a 0E94 0000 		call calculateAverageRightSpeed
  89               	.LVL2:
  90 001e 5C01      		movw r10,r24
  91               	.LVL3:
  28:Crash.c       **** 	uint16_t averageSpeed = (avergeLeftSpeed + avergeRightSpeed)/2;
  92               		.loc 1 28 0
  93 0020 EC01      		movw r28,r24
  94 0022 C00F      		add r28,r16
  95 0024 D11F      		adc r29,r17
  96 0026 D695      		lsr r29
  97 0028 C795      		ror r28
  98               	.LVL4:
  29:Crash.c       **** 	double speedCMPerSecond = averageSpeed * 5 * 0.025; // One speed point is equal to 5 segments per 
  99               		.loc 1 29 0
 100 002a 85E0      		ldi r24,lo8(5)
 101 002c 8C9F      		mul r24,r28
 102 002e B001      		movw r22,r0
 103 0030 8D9F      		mul r24,r29
 104 0032 700D      		add r23,r0
 105 0034 1124      		clr __zero_reg__
 106 0036 80E0      		ldi r24,0
 107 0038 90E0      		ldi r25,0
 108 003a 0E94 0000 		call __floatunsisf
 109               	.LVL5:
 110 003e 2DEC      		ldi r18,lo8(-51)
 111 0040 3CEC      		ldi r19,lo8(-52)
 112 0042 4CEC      		ldi r20,lo8(-52)
 113 0044 5CE3      		ldi r21,lo8(60)
 114 0046 0E94 0000 		call __mulsf3
 115               	.LVL6:
 116 004a 6B01      		movw r12,r22
 117 004c 7C01      		movw r14,r24
 118               	.LVL7:
  30:Crash.c       **** 														// By multiplying the speed by 5
  31:Crash.c       **** 													    // you get the amount of segments past
  32:Crash.c       **** 														// on the encoder per second. 
  33:Crash.c       **** 													    // Each segment is +/- 0.25mm. So by 
  34:Crash.c       **** 														// multiplying is by 0.025cm you get the 
  35:Crash.c       **** 														// amount of cm/s.
  36:Crash.c       **** 
  37:Crash.c       **** 	#ifdef SERIAL_DEBUG
  38:Crash.c       **** 		writeString("Average left speed: ");
 119               		.loc 1 38 0
 120 004e 80E0      		ldi r24,lo8(.LC0)
 121 0050 90E0      		ldi r25,hi8(.LC0)
 122 0052 0E94 0000 		call writeString
 123               	.LVL8:
  39:Crash.c       **** 		writeInteger(avergeLeftSpeed, DEC);
 124               		.loc 1 39 0
 125 0056 6AE0      		ldi r22,lo8(10)
 126 0058 C801      		movw r24,r16
 127 005a 0E94 0000 		call writeInteger
 128               	.LVL9:
  40:Crash.c       **** 		writeChar('\n');
 129               		.loc 1 40 0
 130 005e 8AE0      		ldi r24,lo8(10)
 131 0060 0E94 0000 		call writeChar
 132               	.LVL10:
  41:Crash.c       **** 		writeString("Average right speed: ");
 133               		.loc 1 41 0
 134 0064 80E0      		ldi r24,lo8(.LC1)
 135 0066 90E0      		ldi r25,hi8(.LC1)
 136 0068 0E94 0000 		call writeString
 137               	.LVL11:
  42:Crash.c       **** 		writeInteger(avergeRightSpeed, DEC);
 138               		.loc 1 42 0
 139 006c 6AE0      		ldi r22,lo8(10)
 140 006e C501      		movw r24,r10
 141 0070 0E94 0000 		call writeInteger
 142               	.LVL12:
  43:Crash.c       **** 		writeChar('\n');
 143               		.loc 1 43 0
 144 0074 8AE0      		ldi r24,lo8(10)
 145 0076 0E94 0000 		call writeChar
 146               	.LVL13:
  44:Crash.c       **** 		writeString("Average speed: ");
 147               		.loc 1 44 0
 148 007a 80E0      		ldi r24,lo8(.LC2)
 149 007c 90E0      		ldi r25,hi8(.LC2)
 150 007e 0E94 0000 		call writeString
 151               	.LVL14:
  45:Crash.c       **** 		writeInteger(averageSpeed, DEC);
 152               		.loc 1 45 0
 153 0082 6AE0      		ldi r22,lo8(10)
 154 0084 CE01      		movw r24,r28
 155 0086 0E94 0000 		call writeInteger
 156               	.LVL15:
  46:Crash.c       **** 		writeChar('\n');
 157               		.loc 1 46 0
 158 008a 8AE0      		ldi r24,lo8(10)
 159 008c 0E94 0000 		call writeChar
 160               	.LVL16:
  47:Crash.c       **** 		writeString("Average: ");
 161               		.loc 1 47 0
 162 0090 80E0      		ldi r24,lo8(.LC3)
 163 0092 90E0      		ldi r25,hi8(.LC3)
 164 0094 0E94 0000 		call writeString
 165               	.LVL17:
  48:Crash.c       **** 		writeInteger(speedCMPerSecond, DEC);
 166               		.loc 1 48 0
 167 0098 C701      		movw r24,r14
 168 009a B601      		movw r22,r12
 169 009c 0E94 0000 		call __fixsfsi
 170               	.LVL18:
 171 00a0 DC01      		movw r26,r24
 172 00a2 CB01      		movw r24,r22
 173 00a4 6AE0      		ldi r22,lo8(10)
 174 00a6 0E94 0000 		call writeInteger
 175               	.LVL19:
  49:Crash.c       **** 		writeString(" cm/s");
 176               		.loc 1 49 0
 177 00aa 80E0      		ldi r24,lo8(.LC4)
 178 00ac 90E0      		ldi r25,hi8(.LC4)
 179 00ae 0E94 0000 		call writeString
 180               	.LVL20:
  50:Crash.c       **** 		writeChar('\n');
 181               		.loc 1 50 0
 182 00b2 8AE0      		ldi r24,lo8(10)
 183 00b4 0E94 0000 		call writeChar
 184               	.LVL21:
  51:Crash.c       **** 		writeChar('\n');
 185               		.loc 1 51 0
 186 00b8 8AE0      		ldi r24,lo8(10)
 187 00ba 0E94 0000 		call writeChar
 188               	.LVL22:
  52:Crash.c       **** 
  53:Crash.c       **** 		writeString("GyX: ");
 189               		.loc 1 53 0
 190 00be 80E0      		ldi r24,lo8(.LC5)
 191 00c0 90E0      		ldi r25,hi8(.LC5)
 192 00c2 0E94 0000 		call writeString
 193               	.LVL23:
  54:Crash.c       **** 		writeInteger(((gDataArray[14].GyroX_H << 8) | gDataArray[14].GyroX_L), DEC);
 194               		.loc 1 54 0
 195 00c6 2091 0000 		lds r18,gDataArray+84
 196 00ca 3327      		clr r19
 197 00cc 27FD      		sbrc r18,7
 198 00ce 3095      		com r19
 199 00d0 322F      		mov r19,r18
 200 00d2 2227      		clr r18
 201 00d4 8091 0000 		lds r24,gDataArray+85
 202 00d8 9927      		clr r25
 203 00da 87FD      		sbrc r24,7
 204 00dc 9095      		com r25
 205 00de 6AE0      		ldi r22,lo8(10)
 206 00e0 822B      		or r24,r18
 207 00e2 932B      		or r25,r19
 208 00e4 0E94 0000 		call writeInteger
 209               	.LVL24:
  55:Crash.c       **** 		writeChar('\n');
 210               		.loc 1 55 0
 211 00e8 8AE0      		ldi r24,lo8(10)
 212 00ea 0E94 0000 		call writeChar
 213               	.LVL25:
  56:Crash.c       **** 		writeChar('\n');
 214               		.loc 1 56 0
 215 00ee 8AE0      		ldi r24,lo8(10)
 216 00f0 0E94 0000 		call writeChar
 217               	.LVL26:
  57:Crash.c       **** 		writeString("GyY: ");
 218               		.loc 1 57 0
 219 00f4 80E0      		ldi r24,lo8(.LC6)
 220 00f6 90E0      		ldi r25,hi8(.LC6)
 221 00f8 0E94 0000 		call writeString
 222               	.LVL27:
  58:Crash.c       **** 		writeInteger(((gDataArray[14].GyroY_H << 8) | gDataArray[14].GyroY_L), DEC);
 223               		.loc 1 58 0
 224 00fc 2091 0000 		lds r18,gDataArray+86
 225 0100 3327      		clr r19
 226 0102 27FD      		sbrc r18,7
 227 0104 3095      		com r19
 228 0106 322F      		mov r19,r18
 229 0108 2227      		clr r18
 230 010a 8091 0000 		lds r24,gDataArray+87
 231 010e 9927      		clr r25
 232 0110 87FD      		sbrc r24,7
 233 0112 9095      		com r25
 234 0114 6AE0      		ldi r22,lo8(10)
 235 0116 822B      		or r24,r18
 236 0118 932B      		or r25,r19
 237 011a 0E94 0000 		call writeInteger
 238               	.LVL28:
  59:Crash.c       **** 		writeChar('\n');
 239               		.loc 1 59 0
 240 011e 8AE0      		ldi r24,lo8(10)
 241 0120 0E94 0000 		call writeChar
 242               	.LVL29:
  60:Crash.c       **** 		writeChar('\n');
 243               		.loc 1 60 0
 244 0124 8AE0      		ldi r24,lo8(10)
 245 0126 0E94 0000 		call writeChar
 246               	.LVL30:
  61:Crash.c       **** 		writeString("GyZ: ");
 247               		.loc 1 61 0
 248 012a 80E0      		ldi r24,lo8(.LC7)
 249 012c 90E0      		ldi r25,hi8(.LC7)
 250 012e 0E94 0000 		call writeString
 251               	.LVL31:
  62:Crash.c       **** 		writeInteger(((gDataArray[14].GyroZ_H << 8) | gDataArray[14].GyroZ_L), DEC);
 252               		.loc 1 62 0
 253 0132 2091 0000 		lds r18,gDataArray+88
 254 0136 3327      		clr r19
 255 0138 27FD      		sbrc r18,7
 256 013a 3095      		com r19
 257 013c 322F      		mov r19,r18
 258 013e 2227      		clr r18
 259 0140 8091 0000 		lds r24,gDataArray+89
 260 0144 9927      		clr r25
 261 0146 87FD      		sbrc r24,7
 262 0148 9095      		com r25
 263 014a 6AE0      		ldi r22,lo8(10)
 264 014c 822B      		or r24,r18
 265 014e 932B      		or r25,r19
 266 0150 0E94 0000 		call writeInteger
 267               	.LVL32:
  63:Crash.c       **** 		writeChar('\n');
 268               		.loc 1 63 0
 269 0154 8AE0      		ldi r24,lo8(10)
 270 0156 0E94 0000 		call writeChar
 271               	.LVL33:
  64:Crash.c       **** 		writeChar('\n');
 272               		.loc 1 64 0
 273 015a 8AE0      		ldi r24,lo8(10)
 274 015c 0E94 0000 		call writeChar
 275               	.LVL34:
  65:Crash.c       **** 	#endif
  66:Crash.c       **** 
  67:Crash.c       **** 	crashInfoToSend.speed = speedCMPerSecond;
 276               		.loc 1 67 0
 277 0160 C092 0000 		sts crashInfoToSend,r12
 278 0164 D092 0000 		sts crashInfoToSend+1,r13
 279 0168 E092 0000 		sts crashInfoToSend+2,r14
 280 016c F092 0000 		sts crashInfoToSend+3,r15
  68:Crash.c       **** 	crashInfoToSend.sideHit = hitSide;
 281               		.loc 1 68 0
 282 0170 8091 0000 		lds r24,hitSide
 283 0174 8093 0000 		sts crashInfoToSend+4,r24
  69:Crash.c       **** 	crashInfoToSend.impact = 1;
 284               		.loc 1 69 0
 285 0178 81E0      		ldi r24,lo8(1)
 286 017a 90E0      		ldi r25,0
 287 017c 9093 0000 		sts crashInfoToSend+5+1,r25
 288 0180 8093 0000 		sts crashInfoToSend+5,r24
 289               	/* epilogue start */
  70:Crash.c       **** 
  71:Crash.c       **** 
  72:Crash.c       **** 	return true;
  73:Crash.c       **** }
 290               		.loc 1 73 0
 291 0184 DF91      		pop r29
 292 0186 CF91      		pop r28
 293               	.LVL35:
 294 0188 1F91      		pop r17
 295 018a 0F91      		pop r16
 296               	.LVL36:
 297 018c FF90      		pop r15
 298 018e EF90      		pop r14
 299 0190 DF90      		pop r13
 300 0192 CF90      		pop r12
 301               	.LVL37:
 302 0194 BF90      		pop r11
 303 0196 AF90      		pop r10
 304               	.LVL38:
 305 0198 0895      		ret
 306               		.cfi_endproc
 307               	.LFE7:
 309               		.section	.rodata.str1.1
 310               	.LC8:
 311 005d 5345 4E44 		.string	"SENDING TO ARDUINO\n"
 311      494E 4720 
 311      544F 2041 
 311      5244 5549 
 311      4E4F 0A00 
 312               	.global	__fixunssfsi
 313               		.text
 314               	.global	sendCrashInfo
 316               	sendCrashInfo:
 317               	.LFB8:
  74:Crash.c       **** 
  75:Crash.c       **** void sendCrashInfo(void)
  76:Crash.c       **** {
 318               		.loc 1 76 0
 319               		.cfi_startproc
 320               	/* prologue: function */
 321               	/* frame size = 0 */
 322               	/* stack size = 0 */
 323               	.L__stack_usage = 0
  77:Crash.c       **** 	writeString("SENDING TO ARDUINO\n");
 324               		.loc 1 77 0
 325 019a 80E0      		ldi r24,lo8(.LC8)
 326 019c 90E0      		ldi r25,hi8(.LC8)
 327 019e 0E94 0000 		call writeString
 328               	.LVL39:
  78:Crash.c       **** 	I2CTWI_transmit2Bytes(ARDUINO_WRITE_ADDRESS, 1, crashInfoToSend.speed); // In cm/s
 329               		.loc 1 78 0
 330 01a2 6091 0000 		lds r22,crashInfoToSend
 331 01a6 7091 0000 		lds r23,crashInfoToSend+1
 332 01aa 8091 0000 		lds r24,crashInfoToSend+2
 333 01ae 9091 0000 		lds r25,crashInfoToSend+3
 334 01b2 0E94 0000 		call __fixunssfsi
 335               	.LVL40:
 336 01b6 462F      		mov r20,r22
 337 01b8 61E0      		ldi r22,lo8(1)
 338 01ba 84E5      		ldi r24,lo8(84)
 339 01bc 0E94 0000 		call I2CTWI_transmit2Bytes
 340               	.LVL41:
  79:Crash.c       **** 	I2CTWI_transmit3Bytes(ARDUINO_WRITE_ADDRESS, 2, gDataArray[14].GyroX_H, gDataArray[14].GyroX_L);
 341               		.loc 1 79 0
 342 01c0 2091 0000 		lds r18,gDataArray+85
 343 01c4 4091 0000 		lds r20,gDataArray+84
 344 01c8 62E0      		ldi r22,lo8(2)
 345 01ca 84E5      		ldi r24,lo8(84)
 346 01cc 0E94 0000 		call I2CTWI_transmit3Bytes
 347               	.LVL42:
  80:Crash.c       **** 	I2CTWI_transmit3Bytes(ARDUINO_WRITE_ADDRESS, 3, gDataArray[14].GyroY_H, gDataArray[14].GyroY_L);
 348               		.loc 1 80 0
 349 01d0 2091 0000 		lds r18,gDataArray+87
 350 01d4 4091 0000 		lds r20,gDataArray+86
 351 01d8 63E0      		ldi r22,lo8(3)
 352 01da 84E5      		ldi r24,lo8(84)
 353 01dc 0E94 0000 		call I2CTWI_transmit3Bytes
 354               	.LVL43:
  81:Crash.c       **** 	I2CTWI_transmit3Bytes(ARDUINO_WRITE_ADDRESS, 4, gDataArray[14].GyroZ_H, gDataArray[14].GyroZ_L);
 355               		.loc 1 81 0
 356 01e0 2091 0000 		lds r18,gDataArray+89
 357 01e4 4091 0000 		lds r20,gDataArray+88
 358 01e8 64E0      		ldi r22,lo8(4)
 359 01ea 84E5      		ldi r24,lo8(84)
 360 01ec 0E94 0000 		call I2CTWI_transmit3Bytes
 361               	.LVL44:
  82:Crash.c       **** 	I2CTWI_transmit2Bytes(ARDUINO_WRITE_ADDRESS, 5, crashInfoToSend.sideHit); 	// 1: front
 362               		.loc 1 82 0
 363 01f0 4091 0000 		lds r20,crashInfoToSend+4
 364 01f4 65E0      		ldi r22,lo8(5)
 365 01f6 84E5      		ldi r24,lo8(84)
 366 01f8 0E94 0000 		call I2CTWI_transmit2Bytes
 367               	.LVL45:
  83:Crash.c       **** 																				// 2: right
  84:Crash.c       **** 																				// 3: left
  85:Crash.c       **** 																				// 4: back	
  86:Crash.c       **** 
  87:Crash.c       **** 	I2CTWI_transmit2Bytes(ARDUINO_WRITE_ADDRESS, 6, crashInfoToSend.impact);
 368               		.loc 1 87 0
 369 01fc 4091 0000 		lds r20,crashInfoToSend+5
 370 0200 66E0      		ldi r22,lo8(6)
 371 0202 84E5      		ldi r24,lo8(84)
 372 0204 0C94 0000 		jmp I2CTWI_transmit2Bytes
 373               	.LVL46:
 374               		.cfi_endproc
 375               	.LFE8:
 377               		.section	.rodata.str1.1
 378               	.LC9:
 379 0071 4275 6D70 		.string	"Bumper changed\n"
 379      6572 2063 
 379      6861 6E67 
 379      6564 0A00 
 380               	.LC10:
 381 0081 4275 6D70 		.string	"Bumper was pressed\n"
 381      6572 2077 
 381      6173 2070 
 381      7265 7373 
 381      6564 0A00 
 382               	.LC11:
 383 0095 4275 6D70 		.string	"Bumper was released\n"
 383      6572 2077 
 383      6173 2072 
 383      656C 6561 
 383      7365 640A 
 384               		.text
 385               	.global	buttenChanged
 387               	buttenChanged:
 388               	.LFB9:
  88:Crash.c       **** }
  89:Crash.c       **** 
  90:Crash.c       **** 
  91:Crash.c       **** 
  92:Crash.c       **** void buttenChanged(void)
  93:Crash.c       **** {
 389               		.loc 1 93 0
 390               		.cfi_startproc
 391               	/* prologue: function */
 392               	/* frame size = 0 */
 393               	/* stack size = 0 */
 394               	.L__stack_usage = 0
  94:Crash.c       **** 	#ifdef SERIAL_DEBUG
  95:Crash.c       **** 		writeString("Bumper changed\n");
 395               		.loc 1 95 0
 396 0208 80E0      		ldi r24,lo8(.LC9)
 397 020a 90E0      		ldi r25,hi8(.LC9)
 398 020c 0E94 0000 		call writeString
 399               	.LVL47:
  96:Crash.c       **** 	#endif
  97:Crash.c       **** 
  98:Crash.c       **** 	if(!pressed)
 400               		.loc 1 98 0
 401 0210 8091 0000 		lds r24,pressed
 402 0214 8111      		cpse r24,__zero_reg__
 403 0216 00C0      		rjmp .L4
  99:Crash.c       **** 	{
 100:Crash.c       **** 		#ifdef SERIAL_DEBUG
 101:Crash.c       **** 			writeString("Bumper was pressed\n");
 404               		.loc 1 101 0
 405 0218 80E0      		ldi r24,lo8(.LC10)
 406 021a 90E0      		ldi r25,hi8(.LC10)
 407 021c 0E94 0000 		call writeString
 408               	.LVL48:
 102:Crash.c       **** 			writeSpeed();
 409               		.loc 1 102 0
 410 0220 0E94 0000 		call writeSpeed
 411               	.LVL49:
 103:Crash.c       **** 			writeGyro();
 412               		.loc 1 103 0
 413 0224 0E94 0000 		call writeGyro
 414               	.LVL50:
 104:Crash.c       **** 		#endif
 105:Crash.c       **** 
 106:Crash.c       **** 	 	if(bumper_left || bumper_right)
 415               		.loc 1 106 0
 416 0228 8091 0000 		lds r24,bumper_left
 417 022c 8111      		cpse r24,__zero_reg__
 418 022e 00C0      		rjmp .L5
 419               		.loc 1 106 0 is_stmt 0 discriminator 1
 420 0230 8091 0000 		lds r24,bumper_right
 421 0234 8823      		tst r24
 422 0236 01F0      		breq .L6
 423               	.L5:
 107:Crash.c       **** 	 		hitSide = 1;
 424               		.loc 1 107 0 is_stmt 1
 425 0238 81E0      		ldi r24,lo8(1)
 426 023a 00C0      		rjmp .L14
 427               	.L6:
 108:Crash.c       **** 	 	else if(PINC & IO_PC2)
 428               		.loc 1 108 0
 429 023c 9A9B      		sbis 0x13,2
 430 023e 00C0      		rjmp .L8
 109:Crash.c       **** 	 		hitSide = 4;
 431               		.loc 1 109 0
 432 0240 84E0      		ldi r24,lo8(4)
 433 0242 00C0      		rjmp .L14
 434               	.L8:
 110:Crash.c       **** 	 	else if(PINC & IO_PC3)
 435               		.loc 1 110 0
 436 0244 9B9B      		sbis 0x13,3
 437 0246 00C0      		rjmp .L9
 111:Crash.c       **** 	 		hitSide = 3;
 438               		.loc 1 111 0
 439 0248 83E0      		ldi r24,lo8(3)
 440 024a 00C0      		rjmp .L14
 441               	.L9:
 112:Crash.c       **** 	 	else if(PINC & IO_PC5)
 442               		.loc 1 112 0
 443 024c 9D9B      		sbis 0x13,5
 444 024e 00C0      		rjmp .L7
 113:Crash.c       **** 	 		hitSide = 2;
 445               		.loc 1 113 0
 446 0250 82E0      		ldi r24,lo8(2)
 447               	.L14:
 448 0252 8093 0000 		sts hitSide,r24
 449               	.L7:
 114:Crash.c       **** 
 115:Crash.c       **** 		setRP6LEDs(0b1111);
 450               		.loc 1 115 0 discriminator 1
 451 0256 8FE0      		ldi r24,lo8(15)
 452 0258 0E94 0000 		call setRP6LEDs
 453               	.LVL51:
 116:Crash.c       **** 		pressed = true;
 454               		.loc 1 116 0 discriminator 1
 455 025c 81E0      		ldi r24,lo8(1)
 456 025e 8093 0000 		sts pressed,r24
 457 0262 0895      		ret
 458               	.L4:
 117:Crash.c       **** 	}
 118:Crash.c       **** 	else if(pressed)
 119:Crash.c       **** 	{
 120:Crash.c       **** 		#ifdef SERIAL_DEBUG
 121:Crash.c       **** 			writeString("Bumper was released\n");
 459               		.loc 1 121 0
 460 0264 80E0      		ldi r24,lo8(.LC11)
 461 0266 90E0      		ldi r25,hi8(.LC11)
 462 0268 0E94 0000 		call writeString
 463               	.LVL52:
 122:Crash.c       **** 		#endif
 123:Crash.c       **** 
 124:Crash.c       **** 		pressed = false;
 464               		.loc 1 124 0
 465 026c 1092 0000 		sts pressed,__zero_reg__
 125:Crash.c       **** 		crashInfoWasSend = false;
 466               		.loc 1 125 0
 467 0270 1092 0000 		sts crashInfoWasSend,__zero_reg__
 468 0274 0895      		ret
 469               		.cfi_endproc
 470               	.LFE9:
 472               		.comm	hitSide,1,1
 473               	.global	crashInfoWasSend
 474               		.section .bss
 477               	crashInfoWasSend:
 478 0000 00        		.zero	1
 479               	.global	pressed
 482               	pressed:
 483 0001 00        		.zero	1
 484               		.comm	crashInfoToSend,7,1
 485               		.comm	statusLEDs,1,1
 486               		.comm	drive_status,1,1
 487               		.comm	status,1,1
 488               		.comm	interrupt_status,1,1
 489               		.comm	timer,2,1
 490               		.comm	sDataArray,30,1
 491               		.text
 492               	.Letext0:
 493               		.file 2 "/usr/lib/avr/include/stdint.h"
 494               		.file 3 "MPU9250.h"
 495               		.file 4 "Crash.h"
 496               		.file 5 "Drive.h"
 497               		.file 6 "../../../../rp6/RP6Examples_20120725f/RP6Lib/RP6control_I2CMasterLib/internal/RP6Control_
 498               		.file 7 "../../../../rp6/RP6Examples_20120725f/RP6Lib/RP6control/internal/Timer_internal.h"
 499               		.file 8 "../../../../rp6/RP6Examples_20120725f/RP6Lib/RP6common/RP6uart.h"
 500               		.file 9 "../../../../rp6/RP6Examples_20120725f/RP6Lib/RP6common/RP6I2CmasterTWI.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Crash.c
     /tmp/ccKUzBet.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccKUzBet.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccKUzBet.s:4      *ABS*:0000003f __SREG__
     /tmp/ccKUzBet.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccKUzBet.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccKUzBet.s:33     .text:00000000 assignCrashInfo
                            *COM*:00000007 crashInfoToSend
                            *COM*:00000001 hitSide
     /tmp/ccKUzBet.s:316    .text:0000019a sendCrashInfo
     /tmp/ccKUzBet.s:387    .text:00000208 buttenChanged
     /tmp/ccKUzBet.s:482    .bss:00000001 pressed
     /tmp/ccKUzBet.s:477    .bss:00000000 crashInfoWasSend
                            *COM*:00000001 statusLEDs
                            *COM*:00000001 drive_status
                            *COM*:00000001 status
                            *COM*:00000001 interrupt_status
                            *COM*:00000002 timer
                            *COM*:0000001e sDataArray

UNDEFINED SYMBOLS
__floatunsisf
__mulsf3
__fixsfsi
calculateAverageLeftSpeed
calculateAverageRightSpeed
writeString
writeInteger
writeChar
gDataArray
__fixunssfsi
I2CTWI_transmit2Bytes
I2CTWI_transmit3Bytes
writeSpeed
writeGyro
bumper_left
bumper_right
setRP6LEDs
__do_copy_data
__do_clear_bss
