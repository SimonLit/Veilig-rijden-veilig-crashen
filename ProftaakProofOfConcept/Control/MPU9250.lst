   1               		.file	"MPU9250.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	initMPU9250
  12               	initMPU9250:
  13               	.LFB1:
  14               		.file 1 "MPU9250.c"
   1:MPU9250.c     **** #include "MPU9250.h"
   2:MPU9250.c     **** #include "RP6uart.h"
   3:MPU9250.c     **** #include "Stopwatch.h"
   4:MPU9250.c     **** #include "RP6I2CmasterTWI.h"
   5:MPU9250.c     **** #include <stdbool.h>
   6:MPU9250.c     **** #include "Stopwatch.h"
   7:MPU9250.c     **** 
   8:MPU9250.c     **** //====================================================================================
   9:MPU9250.c     **** // MPU-9250 gryoscope
  10:MPU9250.c     **** //====================================================================================
  11:MPU9250.c     **** 
  12:MPU9250.c     **** #define MPU9250_DEVICE_ADDRESS (0x68)
  13:MPU9250.c     **** #define MPU9250_WRITE_ADDRESS (MPU9250_DEVICE_ADDRESS << 1)
  14:MPU9250.c     **** #define MPU9250_READ_ADDRESS (MPU9250_WRITE_ADDRESS + 1)
  15:MPU9250.c     **** 
  16:MPU9250.c     **** uint8_t gyroArraySize = 15;
  17:MPU9250.c     **** uint8_t gyroArrayIndexToWriteTo = 0;
  18:MPU9250.c     **** gyroData gDataArray[15];
  19:MPU9250.c     **** 
  20:MPU9250.c     **** bool doneReadingGyro = false;
  21:MPU9250.c     **** 
  22:MPU9250.c     **** void initMPU9250(void)
  23:MPU9250.c     **** {
  15               		.loc 1 23 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  24:MPU9250.c     **** 	I2CTWI_transmit2Bytes(MPU9250_WRITE_ADDRESS, 0x4B, 0);
  21               		.loc 1 24 0
  22 0000 40E0      		ldi r20,0
  23 0002 6BE4      		ldi r22,lo8(75)
  24 0004 80ED      		ldi r24,lo8(-48)
  25 0006 0C94 0000 		jmp I2CTWI_transmit2Bytes
  26               	.LVL0:
  27               		.cfi_endproc
  28               	.LFE1:
  30               	.global	getGyroData
  32               	getGyroData:
  33               	.LFB2:
  25:MPU9250.c     **** }
  26:MPU9250.c     **** 
  27:MPU9250.c     **** void getGyroData(gyroData* gData) 
  28:MPU9250.c     **** {
  34               		.loc 1 28 0
  35               		.cfi_startproc
  36               	.LVL1:
  37 000a CF93      		push r28
  38               	.LCFI0:
  39               		.cfi_def_cfa_offset 3
  40               		.cfi_offset 28, -2
  41 000c DF93      		push r29
  42               	.LCFI1:
  43               		.cfi_def_cfa_offset 4
  44               		.cfi_offset 29, -3
  45               	/* prologue: function */
  46               	/* frame size = 0 */
  47               	/* stack size = 2 */
  48               	.L__stack_usage = 2
  49 000e EC01      		movw r28,r24
  29:MPU9250.c     **** 	// Read gryo data from the X-ax
  30:MPU9250.c     **** 	I2CTWI_transmitByte(MPU9250_WRITE_ADDRESS, 0x43);
  50               		.loc 1 30 0
  51 0010 63E4      		ldi r22,lo8(67)
  52 0012 80ED      		ldi r24,lo8(-48)
  53               	.LVL2:
  54 0014 0E94 0000 		call I2CTWI_transmitByte
  55               	.LVL3:
  31:MPU9250.c     **** 	gData->GyroX_H = I2CTWI_readByte(MPU9250_READ_ADDRESS);
  56               		.loc 1 31 0
  57 0018 81ED      		ldi r24,lo8(-47)
  58 001a 0E94 0000 		call I2CTWI_readByte
  59               	.LVL4:
  60 001e 8883      		st Y,r24
  32:MPU9250.c     **** 	I2CTWI_transmitByte(MPU9250_WRITE_ADDRESS, 0x44);
  61               		.loc 1 32 0
  62 0020 64E4      		ldi r22,lo8(68)
  63 0022 80ED      		ldi r24,lo8(-48)
  64 0024 0E94 0000 		call I2CTWI_transmitByte
  65               	.LVL5:
  33:MPU9250.c     **** 	gData->GyroX_L = I2CTWI_readByte(MPU9250_READ_ADDRESS);
  66               		.loc 1 33 0
  67 0028 81ED      		ldi r24,lo8(-47)
  68 002a 0E94 0000 		call I2CTWI_readByte
  69               	.LVL6:
  70 002e 8983      		std Y+1,r24
  34:MPU9250.c     **** 
  35:MPU9250.c     **** 	// Read gryo data from the Y-ax
  36:MPU9250.c     **** 	I2CTWI_transmitByte(MPU9250_WRITE_ADDRESS, 0x45);
  71               		.loc 1 36 0
  72 0030 65E4      		ldi r22,lo8(69)
  73 0032 80ED      		ldi r24,lo8(-48)
  74 0034 0E94 0000 		call I2CTWI_transmitByte
  75               	.LVL7:
  37:MPU9250.c     **** 	gData->GyroY_H = I2CTWI_readByte(MPU9250_READ_ADDRESS);
  76               		.loc 1 37 0
  77 0038 81ED      		ldi r24,lo8(-47)
  78 003a 0E94 0000 		call I2CTWI_readByte
  79               	.LVL8:
  80 003e 8A83      		std Y+2,r24
  38:MPU9250.c     **** 	I2CTWI_transmitByte(MPU9250_WRITE_ADDRESS, 0x46);
  81               		.loc 1 38 0
  82 0040 66E4      		ldi r22,lo8(70)
  83 0042 80ED      		ldi r24,lo8(-48)
  84 0044 0E94 0000 		call I2CTWI_transmitByte
  85               	.LVL9:
  39:MPU9250.c     **** 	gData->GyroY_L = I2CTWI_readByte(MPU9250_READ_ADDRESS);
  86               		.loc 1 39 0
  87 0048 81ED      		ldi r24,lo8(-47)
  88 004a 0E94 0000 		call I2CTWI_readByte
  89               	.LVL10:
  90 004e 8B83      		std Y+3,r24
  40:MPU9250.c     **** 
  41:MPU9250.c     **** 	// Read gryo data from the Z-ax
  42:MPU9250.c     **** 	I2CTWI_transmitByte(MPU9250_WRITE_ADDRESS, 0x47);
  91               		.loc 1 42 0
  92 0050 67E4      		ldi r22,lo8(71)
  93 0052 80ED      		ldi r24,lo8(-48)
  94 0054 0E94 0000 		call I2CTWI_transmitByte
  95               	.LVL11:
  43:MPU9250.c     **** 	gData->GyroZ_H = I2CTWI_readByte(MPU9250_READ_ADDRESS);
  96               		.loc 1 43 0
  97 0058 81ED      		ldi r24,lo8(-47)
  98 005a 0E94 0000 		call I2CTWI_readByte
  99               	.LVL12:
 100 005e 8C83      		std Y+4,r24
  44:MPU9250.c     **** 	I2CTWI_transmitByte(MPU9250_WRITE_ADDRESS, 0x48);
 101               		.loc 1 44 0
 102 0060 68E4      		ldi r22,lo8(72)
 103 0062 80ED      		ldi r24,lo8(-48)
 104 0064 0E94 0000 		call I2CTWI_transmitByte
 105               	.LVL13:
  45:MPU9250.c     **** 	gData->GyroZ_L = I2CTWI_readByte(MPU9250_READ_ADDRESS);
 106               		.loc 1 45 0
 107 0068 81ED      		ldi r24,lo8(-47)
 108 006a 0E94 0000 		call I2CTWI_readByte
 109               	.LVL14:
 110 006e 8D83      		std Y+5,r24
  46:MPU9250.c     **** 
  47:MPU9250.c     **** 	doneReadingGyro = true;
 111               		.loc 1 47 0
 112 0070 81E0      		ldi r24,lo8(1)
 113 0072 8093 0000 		sts doneReadingGyro,r24
 114               	/* epilogue start */
  48:MPU9250.c     **** }
 115               		.loc 1 48 0
 116 0076 DF91      		pop r29
 117 0078 CF91      		pop r28
 118               	.LVL15:
 119 007a 0895      		ret
 120               		.cfi_endproc
 121               	.LFE2:
 123               	.global	saveGyroData
 125               	saveGyroData:
 126               	.LFB3:
  49:MPU9250.c     **** 
  50:MPU9250.c     **** void saveGyroData(gyroData gData)
  51:MPU9250.c     **** {
 127               		.loc 1 51 0
 128               		.cfi_startproc
 129 007c CF93      		push r28
 130               	.LCFI2:
 131               		.cfi_def_cfa_offset 3
 132               		.cfi_offset 28, -2
 133 007e DF93      		push r29
 134               	.LCFI3:
 135               		.cfi_def_cfa_offset 4
 136               		.cfi_offset 29, -3
 137 0080 00D0      		rcall .
 138 0082 00D0      		rcall .
 139 0084 00D0      		rcall .
 140               	.LCFI4:
 141               		.cfi_def_cfa_offset 10
 142 0086 CDB7      		in r28,__SP_L__
 143 0088 DEB7      		in r29,__SP_H__
 144               	.LCFI5:
 145               		.cfi_def_cfa_register 28
 146               	/* prologue: function */
 147               	/* frame size = 6 */
 148               	/* stack size = 8 */
 149               	.L__stack_usage = 8
 150 008a 4983      		std Y+1,r20
 151 008c 5A83      		std Y+2,r21
 152 008e 6B83      		std Y+3,r22
 153 0090 7C83      		std Y+4,r23
 154 0092 8D83      		std Y+5,r24
 155 0094 9E83      		std Y+6,r25
  52:MPU9250.c     **** 
  53:MPU9250.c     **** 	startStopwatch1();
 156               		.loc 1 53 0
 157 0096 8091 0000 		lds r24,stopwatches
 158 009a 8160      		ori r24,lo8(1)
 159 009c 8093 0000 		sts stopwatches,r24
  54:MPU9250.c     **** 	getGyroData(&gData);
 160               		.loc 1 54 0
 161 00a0 CE01      		movw r24,r28
 162 00a2 0196      		adiw r24,1
 163 00a4 0E94 0000 		call getGyroData
 164               	.LVL16:
  55:MPU9250.c     **** 	gDataArray[gyroArrayIndexToWriteTo] = gData;
 165               		.loc 1 55 0
 166 00a8 8091 0000 		lds r24,gyroArrayIndexToWriteTo
 167 00ac 96E0      		ldi r25,lo8(6)
 168 00ae 989F      		mul r25,r24
 169 00b0 D001      		movw r26,r0
 170 00b2 1124      		clr __zero_reg__
 171 00b4 A050      		subi r26,lo8(-(gDataArray))
 172 00b6 B040      		sbci r27,hi8(-(gDataArray))
 173 00b8 FE01      		movw r30,r28
 174 00ba 3196      		adiw r30,1
 175               		0:
 176 00bc 0190      		ld r0,Z+
 177 00be 0D92      		st X+,r0
 178 00c0 9A95      		dec r25
 179 00c2 01F4      		brne 0b
  56:MPU9250.c     **** 	gyroArrayIndexToWriteTo++;
 180               		.loc 1 56 0
 181 00c4 8F5F      		subi r24,lo8(-(1))
 182 00c6 8093 0000 		sts gyroArrayIndexToWriteTo,r24
  57:MPU9250.c     **** 
  58:MPU9250.c     **** 
  59:MPU9250.c     **** 	if(gyroArrayIndexToWriteTo == gyroArraySize)
 183               		.loc 1 59 0
 184 00ca 9091 0000 		lds r25,gyroArraySize
 185 00ce 8913      		cpse r24,r25
 186 00d0 00C0      		rjmp .L4
  60:MPU9250.c     **** 	{
  61:MPU9250.c     **** 		gyroArrayIndexToWriteTo = 0;
 187               		.loc 1 61 0
 188 00d2 1092 0000 		sts gyroArrayIndexToWriteTo,__zero_reg__
 189               	.L4:
  62:MPU9250.c     **** 	}
  63:MPU9250.c     **** 
  64:MPU9250.c     **** 	setStopwatch1(0);
 190               		.loc 1 64 0
 191 00d6 1092 0000 		sts stopwatches+1+1,__zero_reg__
 192 00da 1092 0000 		sts stopwatches+1,__zero_reg__
  65:MPU9250.c     **** 
  66:MPU9250.c     **** 	if(doneReadingGyro)
 193               		.loc 1 66 0
 194 00de 8091 0000 		lds r24,doneReadingGyro
 195 00e2 8823      		tst r24
 196 00e4 01F0      		breq .L5
 197               	.LBB2:
  67:MPU9250.c     **** 	{
  68:MPU9250.c     **** 		getGyroData(&gData);
 198               		.loc 1 68 0
 199 00e6 CE01      		movw r24,r28
 200 00e8 0196      		adiw r24,1
 201 00ea 0E94 0000 		call getGyroData
 202               	.LVL17:
 203 00ee 80E0      		ldi r24,lo8(gDataArray+6)
 204 00f0 90E0      		ldi r25,hi8(gDataArray+6)
 205               	.LBB3:
  69:MPU9250.c     **** 
  70:MPU9250.c     **** 		int arraySize = sizeof(gDataArray)/sizeof(gDataArray[0]);
  71:MPU9250.c     **** 
  72:MPU9250.c     **** 		for (int i = 0; i < (arraySize - 1); i++)
  73:MPU9250.c     **** 		{
  74:MPU9250.c     **** 			gDataArray[i] = gDataArray[i + 1];
 206               		.loc 1 74 0
 207 00f2 26E0      		ldi r18,lo8(6)
 208               	.LVL18:
 209               	.L7:
 210 00f4 DC01      		movw r26,r24
 211 00f6 1697      		sbiw r26,6
 212               		.loc 1 74 0 is_stmt 0 discriminator 2
 213 00f8 FC01      		movw r30,r24
 214 00fa 322F      		mov r19,r18
 215               		0:
 216 00fc 0190      		ld r0,Z+
 217 00fe 0D92      		st X+,r0
 218 0100 3A95      		dec r19
 219 0102 01F4      		brne 0b
 220 0104 0696      		adiw r24,6
  72:MPU9250.c     **** 		for (int i = 0; i < (arraySize - 1); i++)
 221               		.loc 1 72 0 is_stmt 1 discriminator 2
 222 0106 30E0      		ldi r19,hi8(gDataArray+90)
 223 0108 8030      		cpi r24,lo8(gDataArray+90)
 224 010a 9307      		cpc r25,r19
 225 010c 01F4      		brne .L7
 226               	.LBE3:
  75:MPU9250.c     **** 		}
  76:MPU9250.c     **** 
  77:MPU9250.c     **** 		gDataArray[arraySize - 1] = gData;
 227               		.loc 1 77 0
 228 010e 86E0      		ldi r24,lo8(6)
 229 0110 FE01      		movw r30,r28
 230 0112 3196      		adiw r30,1
 231 0114 A0E0      		ldi r26,lo8(gDataArray+84)
 232 0116 B0E0      		ldi r27,hi8(gDataArray+84)
 233               		0:
 234 0118 0190      		ld r0,Z+
 235 011a 0D92      		st X+,r0
 236 011c 8A95      		dec r24
 237 011e 01F4      		brne 0b
 238               	.LVL19:
 239               	.L5:
 240               	.LBE2:
  78:MPU9250.c     **** 	}	
  79:MPU9250.c     **** 	
  80:MPU9250.c     **** 	doneReadingGyro = false;
 241               		.loc 1 80 0
 242 0120 1092 0000 		sts doneReadingGyro,__zero_reg__
 243               	/* epilogue start */
  81:MPU9250.c     **** }
 244               		.loc 1 81 0
 245 0124 2696      		adiw r28,6
 246 0126 0FB6      		in __tmp_reg__,__SREG__
 247 0128 F894      		cli
 248 012a DEBF      		out __SP_H__,r29
 249 012c 0FBE      		out __SREG__,__tmp_reg__
 250 012e CDBF      		out __SP_L__,r28
 251 0130 DF91      		pop r29
 252 0132 CF91      		pop r28
 253 0134 0895      		ret
 254               		.cfi_endproc
 255               	.LFE3:
 257               		.section	.rodata.str1.1,"aMS",@progbits,1
 258               	.LC0:
 259 0000 496E 6465 		.string	"Index "
 259      7820 00
 260               	.LC1:
 261 0007 2063 6861 		.string	" changed."
 261      6E67 6564 
 261      2E00 
 262               	.LC2:
 263 0011 4779 726F 		.string	"Gyro: "
 263      3A20 00
 264               	.LC3:
 265 0018 2058 3A20 		.string	" X: "
 265      00
 266               	.LC4:
 267 001d 2047 7972 		.string	" Gyro: "
 267      6F3A 2000 
 268               	.LC5:
 269 0025 2059 3A20 		.string	" Y: "
 269      00
 270               	.LC6:
 271 002a 205A 3A20 		.string	" Z: "
 271      00
 272               		.text
 273               	.global	writeGyro
 275               	writeGyro:
 276               	.LFB4:
  82:MPU9250.c     **** 
  83:MPU9250.c     **** void writeGyro(void)
  84:MPU9250.c     **** {
 277               		.loc 1 84 0
 278               		.cfi_startproc
 279 0136 EF92      		push r14
 280               	.LCFI6:
 281               		.cfi_def_cfa_offset 3
 282               		.cfi_offset 14, -2
 283 0138 FF92      		push r15
 284               	.LCFI7:
 285               		.cfi_def_cfa_offset 4
 286               		.cfi_offset 15, -3
 287 013a 0F93      		push r16
 288               	.LCFI8:
 289               		.cfi_def_cfa_offset 5
 290               		.cfi_offset 16, -4
 291 013c 1F93      		push r17
 292               	.LCFI9:
 293               		.cfi_def_cfa_offset 6
 294               		.cfi_offset 17, -5
 295 013e CF93      		push r28
 296               	.LCFI10:
 297               		.cfi_def_cfa_offset 7
 298               		.cfi_offset 28, -6
 299 0140 DF93      		push r29
 300               	.LCFI11:
 301               		.cfi_def_cfa_offset 8
 302               		.cfi_offset 29, -7
 303               	/* prologue: function */
 304               	/* frame size = 0 */
 305               	/* stack size = 6 */
 306               	.L__stack_usage = 6
  85:MPU9250.c     **** 
  86:MPU9250.c     **** 	writeString("Index ");
 307               		.loc 1 86 0
 308 0142 80E0      		ldi r24,lo8(.LC0)
 309 0144 90E0      		ldi r25,hi8(.LC0)
 310 0146 0E94 0000 		call writeString
 311               	.LVL20:
  87:MPU9250.c     **** 	if(gyroArrayIndexToWriteTo != 0)
 312               		.loc 1 87 0
 313 014a 8091 0000 		lds r24,gyroArrayIndexToWriteTo
 314 014e 8823      		tst r24
 315 0150 01F0      		breq .L13
  88:MPU9250.c     **** 	{
  89:MPU9250.c     **** 		writeInteger((gyroArrayIndexToWriteTo -1), DEC);
 316               		.loc 1 89 0
 317 0152 90E0      		ldi r25,0
 318 0154 6AE0      		ldi r22,lo8(10)
 319 0156 0197      		sbiw r24,1
 320 0158 00C0      		rjmp .L17
 321               	.L13:
  90:MPU9250.c     **** 	}
  91:MPU9250.c     **** 	else
  92:MPU9250.c     **** 	{
  93:MPU9250.c     **** 		writeInteger(0, DEC);
 322               		.loc 1 93 0
 323 015a 6AE0      		ldi r22,lo8(10)
 324 015c 80E0      		ldi r24,0
 325 015e 90E0      		ldi r25,0
 326               	.L17:
 327 0160 0E94 0000 		call writeInteger
 328               	.LVL21:
  94:MPU9250.c     **** 	}
  95:MPU9250.c     **** 	writeString(" changed.");
 329               		.loc 1 95 0
 330 0164 80E0      		ldi r24,lo8(.LC1)
 331 0166 90E0      		ldi r25,hi8(.LC1)
 332 0168 0E94 0000 		call writeString
 333               	.LVL22:
  96:MPU9250.c     **** 	writeChar('\n');
 334               		.loc 1 96 0
 335 016c 8AE0      		ldi r24,lo8(10)
 336 016e 0E94 0000 		call writeChar
 337               	.LVL23:
 338               	.LBB4:
  97:MPU9250.c     **** 
  98:MPU9250.c     **** 	for(uint8_t index = 0; index < gyroArraySize; index++)
 339               		.loc 1 98 0
 340 0172 E12C      		mov r14,__zero_reg__
  99:MPU9250.c     **** 	{	
 100:MPU9250.c     **** 		writeString("Gyro: ");
 101:MPU9250.c     **** 		writeInteger(index, DEC);
 102:MPU9250.c     **** 		writeString(" X: ");
 103:MPU9250.c     **** 		writeInteger(((gDataArray[index].GyroX_H << 8) | gDataArray[index].GyroX_L), DEC);
 341               		.loc 1 103 0
 342 0174 56E0      		ldi r21,lo8(6)
 343 0176 F52E      		mov r15,r21
 344               	.LVL24:
 345               	.L15:
  98:MPU9250.c     **** 	for(uint8_t index = 0; index < gyroArraySize; index++)
 346               		.loc 1 98 0 discriminator 1
 347 0178 8091 0000 		lds r24,gyroArraySize
 348 017c E816      		cp r14,r24
 349 017e 00F0      		brlo .+2
 350 0180 00C0      		rjmp .L18
 100:MPU9250.c     **** 		writeString("Gyro: ");
 351               		.loc 1 100 0 discriminator 2
 352 0182 80E0      		ldi r24,lo8(.LC2)
 353 0184 90E0      		ldi r25,hi8(.LC2)
 354 0186 0E94 0000 		call writeString
 355               	.LVL25:
 101:MPU9250.c     **** 		writeInteger(index, DEC);
 356               		.loc 1 101 0 discriminator 2
 357 018a 0E2D      		mov r16,r14
 358 018c 10E0      		ldi r17,0
 359 018e 6AE0      		ldi r22,lo8(10)
 360 0190 C801      		movw r24,r16
 361 0192 0E94 0000 		call writeInteger
 362               	.LVL26:
 102:MPU9250.c     **** 		writeString(" X: ");
 363               		.loc 1 102 0 discriminator 2
 364 0196 80E0      		ldi r24,lo8(.LC3)
 365 0198 90E0      		ldi r25,hi8(.LC3)
 366 019a 0E94 0000 		call writeString
 367               	.LVL27:
 368               		.loc 1 103 0 discriminator 2
 369 019e F09E      		mul r15,r16
 370 01a0 E001      		movw r28,r0
 371 01a2 F19E      		mul r15,r17
 372 01a4 D00D      		add r29,r0
 373 01a6 1124      		clr __zero_reg__
 374 01a8 C050      		subi r28,lo8(-(gDataArray))
 375 01aa D040      		sbci r29,hi8(-(gDataArray))
 376 01ac 2881      		ld r18,Y
 377 01ae 3327      		clr r19
 378 01b0 27FD      		sbrc r18,7
 379 01b2 3095      		com r19
 380 01b4 322F      		mov r19,r18
 381 01b6 2227      		clr r18
 382 01b8 8981      		ldd r24,Y+1
 383 01ba 9927      		clr r25
 384 01bc 87FD      		sbrc r24,7
 385 01be 9095      		com r25
 386 01c0 6AE0      		ldi r22,lo8(10)
 387 01c2 822B      		or r24,r18
 388 01c4 932B      		or r25,r19
 389 01c6 0E94 0000 		call writeInteger
 390               	.LVL28:
 104:MPU9250.c     **** 
 105:MPU9250.c     **** 		writeString(" Gyro: ");
 391               		.loc 1 105 0 discriminator 2
 392 01ca 80E0      		ldi r24,lo8(.LC4)
 393 01cc 90E0      		ldi r25,hi8(.LC4)
 394 01ce 0E94 0000 		call writeString
 395               	.LVL29:
 106:MPU9250.c     **** 		writeInteger(index, DEC);
 396               		.loc 1 106 0 discriminator 2
 397 01d2 6AE0      		ldi r22,lo8(10)
 398 01d4 C801      		movw r24,r16
 399 01d6 0E94 0000 		call writeInteger
 400               	.LVL30:
 107:MPU9250.c     **** 		writeString(" Y: ");
 401               		.loc 1 107 0 discriminator 2
 402 01da 80E0      		ldi r24,lo8(.LC5)
 403 01dc 90E0      		ldi r25,hi8(.LC5)
 404 01de 0E94 0000 		call writeString
 405               	.LVL31:
 108:MPU9250.c     **** 		writeInteger(((gDataArray[index].GyroY_H << 8) | gDataArray[index].GyroY_L), DEC);
 406               		.loc 1 108 0 discriminator 2
 407 01e2 2A81      		ldd r18,Y+2
 408 01e4 3327      		clr r19
 409 01e6 27FD      		sbrc r18,7
 410 01e8 3095      		com r19
 411 01ea 322F      		mov r19,r18
 412 01ec 2227      		clr r18
 413 01ee 8B81      		ldd r24,Y+3
 414 01f0 9927      		clr r25
 415 01f2 87FD      		sbrc r24,7
 416 01f4 9095      		com r25
 417 01f6 6AE0      		ldi r22,lo8(10)
 418 01f8 822B      		or r24,r18
 419 01fa 932B      		or r25,r19
 420 01fc 0E94 0000 		call writeInteger
 421               	.LVL32:
 109:MPU9250.c     **** 
 110:MPU9250.c     **** 		writeString(" Gyro: ");
 422               		.loc 1 110 0 discriminator 2
 423 0200 80E0      		ldi r24,lo8(.LC4)
 424 0202 90E0      		ldi r25,hi8(.LC4)
 425 0204 0E94 0000 		call writeString
 426               	.LVL33:
 111:MPU9250.c     **** 		writeInteger(index, DEC);
 427               		.loc 1 111 0 discriminator 2
 428 0208 6AE0      		ldi r22,lo8(10)
 429 020a C801      		movw r24,r16
 430 020c 0E94 0000 		call writeInteger
 431               	.LVL34:
 112:MPU9250.c     **** 		writeString(" Z: ");
 432               		.loc 1 112 0 discriminator 2
 433 0210 80E0      		ldi r24,lo8(.LC6)
 434 0212 90E0      		ldi r25,hi8(.LC6)
 435 0214 0E94 0000 		call writeString
 436               	.LVL35:
 113:MPU9250.c     **** 		writeInteger(((gDataArray[index].GyroZ_H << 8) | gDataArray[index].GyroZ_L), DEC);
 437               		.loc 1 113 0 discriminator 2
 438 0218 2C81      		ldd r18,Y+4
 439 021a 3327      		clr r19
 440 021c 27FD      		sbrc r18,7
 441 021e 3095      		com r19
 442 0220 322F      		mov r19,r18
 443 0222 2227      		clr r18
 444 0224 8D81      		ldd r24,Y+5
 445 0226 9927      		clr r25
 446 0228 87FD      		sbrc r24,7
 447 022a 9095      		com r25
 448 022c 6AE0      		ldi r22,lo8(10)
 449 022e 822B      		or r24,r18
 450 0230 932B      		or r25,r19
 451 0232 0E94 0000 		call writeInteger
 452               	.LVL36:
 114:MPU9250.c     **** 
 115:MPU9250.c     **** 		writeChar('\n');
 453               		.loc 1 115 0 discriminator 2
 454 0236 8AE0      		ldi r24,lo8(10)
 455 0238 0E94 0000 		call writeChar
 456               	.LVL37:
  98:MPU9250.c     **** 	for(uint8_t index = 0; index < gyroArraySize; index++)
 457               		.loc 1 98 0 discriminator 2
 458 023c E394      		inc r14
 459               	.LVL38:
 460 023e 00C0      		rjmp .L15
 461               	.L18:
 462               	.LBE4:
 116:MPU9250.c     **** 	}
 117:MPU9250.c     **** 
 118:MPU9250.c     **** 	writeChar('\n');
 463               		.loc 1 118 0
 464 0240 8AE0      		ldi r24,lo8(10)
 465 0242 0E94 0000 		call writeChar
 466               	.LVL39:
 119:MPU9250.c     **** 	writeChar('\n');
 467               		.loc 1 119 0
 468 0246 8AE0      		ldi r24,lo8(10)
 469               	/* epilogue start */
 120:MPU9250.c     **** }...
 470               		.loc 1 120 0
 471 0248 DF91      		pop r29
 472 024a CF91      		pop r28
 473 024c 1F91      		pop r17
 474 024e 0F91      		pop r16
 475 0250 FF90      		pop r15
 476 0252 EF90      		pop r14
 477               	.LVL40:
 119:MPU9250.c     **** 	writeChar('\n');
 478               		.loc 1 119 0
 479 0254 0C94 0000 		jmp writeChar
 480               	.LVL41:
 481               		.cfi_endproc
 482               	.LFE4:
 484               	.global	doneReadingGyro
 485               		.section .bss
 488               	doneReadingGyro:
 489 0000 00        		.zero	1
 490               		.comm	gDataArray,90,1
 491               	.global	gyroArrayIndexToWriteTo
 494               	gyroArrayIndexToWriteTo:
 495 0001 00        		.zero	1
 496               	.global	gyroArraySize
 497               		.data
 500               	gyroArraySize:
 501 0000 0F        		.byte	15
 502               		.text
 503               	.Letext0:
 504               		.file 2 "/usr/lib/avr/include/stdint.h"
 505               		.file 3 "MPU9250.h"
 506               		.file 4 "../../../../rp6/RP6Examples_20120725f/RP6Lib/RP6control/Stopwatch.h"
 507               		.file 5 "../../../../rp6/RP6Examples_20120725f/RP6Lib/RP6common/RP6I2CmasterTWI.h"
 508               		.file 6 "../../../../rp6/RP6Examples_20120725f/RP6Lib/RP6common/RP6uart.h"
DEFINED SYMBOLS
                            *ABS*:00000000 MPU9250.c
     /tmp/ccseAv0r.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccseAv0r.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccseAv0r.s:4      *ABS*:0000003f __SREG__
     /tmp/ccseAv0r.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccseAv0r.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccseAv0r.s:12     .text:00000000 initMPU9250
     /tmp/ccseAv0r.s:32     .text:0000000a getGyroData
     /tmp/ccseAv0r.s:488    .bss:00000000 doneReadingGyro
     /tmp/ccseAv0r.s:125    .text:0000007c saveGyroData
     /tmp/ccseAv0r.s:494    .bss:00000001 gyroArrayIndexToWriteTo
                            *COM*:0000005a gDataArray
     /tmp/ccseAv0r.s:500    .data:00000000 gyroArraySize
     /tmp/ccseAv0r.s:275    .text:00000136 writeGyro

UNDEFINED SYMBOLS
I2CTWI_transmit2Bytes
I2CTWI_transmitByte
I2CTWI_readByte
stopwatches
writeString
writeInteger
writeChar
__do_copy_data
__do_clear_bss
